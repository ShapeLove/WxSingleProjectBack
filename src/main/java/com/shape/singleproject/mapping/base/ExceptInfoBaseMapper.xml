<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shape.singleproject.mapping.base.ExceptInfoBaseMapper">


    <insert id="insertExceptInfo"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `except_info`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="invocationName!=null">
                        `invocation_name`,
                    </if>
                    <if test="exceptNum!=null">
                        `except_num`,
                    </if>
                    <if test="createTime!=null">
                        `create_time`,
                    </if>
                    <if test="modifiedTime!=null">
                        `modified_time`,
                    </if>
                    <if test="lastExceptMessage!=null">
                        `last_except_message`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="invocationName!=null">
                    #{invocationName},
                </if>
                <if test="exceptNum!=null">
                    #{exceptNum},
                </if>
                <if test="createTime!=null">
                    #{createTime},
                </if>
                <if test="modifiedTime!=null">
                    #{modifiedTime},
                </if>
                <if test="lastExceptMessage!=null">
                    #{lastExceptMessage},
                </if>
        </trim>
        )
    </insert>




    <update id="updateExceptInfo">
        UPDATE `except_info`
        SET
        <trim suffixOverrides=",">
            <if test="invocationName != null and invocationName!=''">
                `invocation_name` = #{invocationName},
            </if>
            <if test="exceptNum != null">
                `except_num` = #{exceptNum},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="modifiedTime != null">
                `modified_time` = #{modifiedTime},
            </if>
            <if test="lastExceptMessage != null and lastExceptMessage!=''">
                `last_except_message` = #{lastExceptMessage},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `except_info`
        SET
        <trim suffixOverrides=",">
        <if test="set.invocationName != null and set.invocationName!=''">
            `invocation_name` = #{set.invocationName},
        </if>
        <if test="set.exceptNum != null">
            `except_num` = #{set.exceptNum},
        </if>
        <if test="set.createTime != null">
            `create_time` = #{set.createTime},
        </if>
        <if test="set.modifiedTime != null">
            `modified_time` = #{set.modifiedTime},
        </if>
        <if test="set.lastExceptMessage != null and set.lastExceptMessage!=''">
            `last_except_message` = #{set.lastExceptMessage},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.invocationNameList != null">
                    `invocation_name` in
                    <foreach collection="where.invocationNameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyInvocationName!=null and where.fuzzyInvocationName.size()>0">
                (
                <foreach collection="where.fuzzyInvocationName"  separator="or" item="item">
                    `Invocation_name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyInvocationName!=null and where.rightFuzzyInvocationName.size()>0">
                (
                <foreach collection="where.rightFuzzyInvocationName"  separator="or" item="item">
                    `Invocation_name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.exceptNumList != null">
                    `except_num` in
                    <foreach collection="where.exceptNumList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.exceptNumSt !=null">
                `except_num` >= #{where.exceptNumSt} and
            </if>
            <if test="where.exceptNumEd!=null">
                `except_num` &lt;= #{where.exceptNumEd} and
            </if>
                <if test="where.createTimeList != null">
                    `create_time` in
                    <foreach collection="where.createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createTimeSt !=null">
                `create_time` >= #{where.createTimeSt} and
            </if>
            <if test="where.createTimeEd!=null">
                `create_time` &lt;= #{where.createTimeEd} and
            </if>
                <if test="where.modifiedTimeList != null">
                    `modified_time` in
                    <foreach collection="where.modifiedTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.modifiedTimeSt !=null">
                `modified_time` >= #{where.modifiedTimeSt} and
            </if>
            <if test="where.modifiedTimeEd!=null">
                `modified_time` &lt;= #{where.modifiedTimeEd} and
            </if>
                <if test="where.lastExceptMessageList != null">
                    `last_except_message` in
                    <foreach collection="where.lastExceptMessageList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyLastExceptMessage!=null and where.fuzzyLastExceptMessage.size()>0">
                (
                <foreach collection="where.fuzzyLastExceptMessage"  separator="or" item="item">
                    `Last_except_message` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyLastExceptMessage!=null and where.rightFuzzyLastExceptMessage.size()>0">
                (
                <foreach collection="where.rightFuzzyLastExceptMessage"  separator="or" item="item">
                    `Last_except_message` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
        </trim>
    </update>


    <resultMap type="com.shape.singleproject.dto.ExceptInfo" id="ExceptInfoMap">
        <result property="id" column="id"/>
        <result property="invocationName" column="invocation_name"/>
        <result property="exceptNum" column="except_num"/>
        <result property="createTime" column="create_time"/>
        <result property="modifiedTime" column="modified_time"/>
        <result property="lastExceptMessage" column="last_except_message"/>
    </resultMap>


    <select id="queryExceptInfo" resultMap="ExceptInfoMap">
        select
        <include refid="baseResult"></include>
        from  `except_info`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="invocationName != null and invocationName!=''">
                `invocation_name` = #{invocationName} and
            </if>
            <if test="exceptNum != null">
                `except_num` = #{exceptNum} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="modifiedTime != null">
                `modified_time` = #{modifiedTime} and
            </if>
            <if test="lastExceptMessage != null and lastExceptMessage!=''">
                `last_except_message` = #{lastExceptMessage} and
            </if>
            <if test = "(_parameter instanceof com.shape.singleproject.dto.ExceptInfo$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="invocationNameList != null">
                    `invocation_name` in
                    <foreach collection="invocationNameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyInvocationName!=null and fuzzyInvocationName.size()>0">
                    (
                    <foreach collection="fuzzyInvocationName"  separator="or" item="item">
                        `Invocation_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyInvocationName!=null and rightFuzzyInvocationName.size()>0">
                    (
                    <foreach collection="rightFuzzyInvocationName"  separator="or" item="item">
                        `Invocation_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="exceptNumList != null">
                    `except_num` in
                    <foreach collection="exceptNumList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="exceptNumSt !=null">
                    `except_num` >= #{exceptNumSt} and
                </if>
                <if test="exceptNumEd!=null">
                    `except_num` &lt;= #{exceptNumEd} and
                </if>
                <if test="createTimeList != null">
                    `create_time` in
                    <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                <if test="modifiedTimeList != null">
                    `modified_time` in
                    <foreach collection="modifiedTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="modifiedTimeSt !=null">
                    `modified_time` >= #{modifiedTimeSt} and
                </if>
                <if test="modifiedTimeEd!=null">
                    `modified_time` &lt;= #{modifiedTimeEd} and
                </if>
                <if test="lastExceptMessageList != null">
                    `last_except_message` in
                    <foreach collection="lastExceptMessageList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyLastExceptMessage!=null and fuzzyLastExceptMessage.size()>0">
                    (
                    <foreach collection="fuzzyLastExceptMessage"  separator="or" item="item">
                        `Last_except_message` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyLastExceptMessage!=null and rightFuzzyLastExceptMessage.size()>0">
                    (
                    <foreach collection="rightFuzzyLastExceptMessage"  separator="or" item="item">
                        `Last_except_message` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryExceptInfoLimit1" resultMap="ExceptInfoMap">
        select
        <include refid="baseResult"></include>
        from  `except_info`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="invocationName != null and invocationName!=''">
                `invocation_name` = #{invocationName} and
            </if>
            <if test="exceptNum != null">
                `except_num` = #{exceptNum} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="modifiedTime != null">
                `modified_time` = #{modifiedTime} and
            </if>
            <if test="lastExceptMessage != null and lastExceptMessage!=''">
                `last_except_message` = #{lastExceptMessage} and
            </if>
            <if test = "(_parameter instanceof com.shape.singleproject.dto.ExceptInfo$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="invocationNameList != null">
                        `invocation_name` in
                        <foreach collection="invocationNameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyInvocationName!=null and fuzzyInvocationName.size()>0">
                    (
                    <foreach collection="fuzzyInvocationName"  separator="or" item="item">
                        `Invocation_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyInvocationName!=null and rightFuzzyInvocationName.size()>0">
                    (
                    <foreach collection="rightFuzzyInvocationName"  separator="or" item="item">
                        `Invocation_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="exceptNumList != null">
                        `except_num` in
                        <foreach collection="exceptNumList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="exceptNumSt !=null">
                    `except_num` >= #{exceptNumSt} and
                </if>
                <if test="exceptNumEd!=null">
                    `except_num` &lt;= #{exceptNumEd} and
                </if>
                    <if test="createTimeList != null">
                        `create_time` in
                        <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                    <if test="modifiedTimeList != null">
                        `modified_time` in
                        <foreach collection="modifiedTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="modifiedTimeSt !=null">
                    `modified_time` >= #{modifiedTimeSt} and
                </if>
                <if test="modifiedTimeEd!=null">
                    `modified_time` &lt;= #{modifiedTimeEd} and
                </if>
                    <if test="lastExceptMessageList != null">
                        `last_except_message` in
                        <foreach collection="lastExceptMessageList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyLastExceptMessage!=null and fuzzyLastExceptMessage.size()>0">
                    (
                    <foreach collection="fuzzyLastExceptMessage"  separator="or" item="item">
                        `Last_except_message` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyLastExceptMessage!=null and rightFuzzyLastExceptMessage.size()>0">
                    (
                    <foreach collection="rightFuzzyLastExceptMessage"  separator="or" item="item">
                        `Last_except_message` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `invocation_name`,
        `except_num`,
        `create_time`,
        `modified_time`,
        `last_except_message`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.shape.singleproject.dto.ExceptInfo$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.invocationName==true">
                        `invocation_name`,
                    </if>
                    <if test="fetchFields.fetchFields.exceptNum==true">
                        `except_num`,
                    </if>
                    <if test="fetchFields.fetchFields.createTime==true">
                        `create_time`,
                    </if>
                    <if test="fetchFields.fetchFields.modifiedTime==true">
                        `modified_time`,
                    </if>
                    <if test="fetchFields.fetchFields.lastExceptMessage==true">
                        `last_except_message`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.invocationName==null">
                        `invocation_name`,
                    </if>
                    <if test="fetchFields.excludeFields.exceptNum==null">
                        `except_num`,
                    </if>
                    <if test="fetchFields.excludeFields.createTime==null">
                        `create_time`,
                    </if>
                    <if test="fetchFields.excludeFields.modifiedTime==null">
                        `modified_time`,
                    </if>
                    <if test="fetchFields.excludeFields.lastExceptMessage==null">
                        `last_except_message`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.shape.singleproject.dto.ExceptInfo$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shape.singleproject.mapping.base.AdminUserBaseMapper">


    <insert id="insertAdminUser"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `admin_user`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="name!=null">
                        `name`,
                    </if>
                    <if test="level!=null">
                        `level`,
                    </if>
                    <if test="create!=null">
                        `create`,
                    </if>
                    <if test="passwd!=null">
                        `passwd`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="name!=null">
                    #{name},
                </if>
                <if test="level!=null">
                    #{level},
                </if>
                <if test="create!=null">
                    #{create},
                </if>
                <if test="passwd!=null">
                    #{passwd},
                </if>
        </trim>
        )
    </insert>




    <update id="updateAdminUser">
        UPDATE `admin_user`
        SET
        <trim suffixOverrides=",">
            <if test="name != null and name!=''">
                `name` = #{name},
            </if>
            <if test="level != null">
                `level` = #{level},
            </if>
            <if test="create != null">
                `create` = #{create},
            </if>
            <if test="passwd != null and passwd!=''">
                `passwd` = #{passwd},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `admin_user`
        SET
        <trim suffixOverrides=",">
        <if test="set.name != null and set.name!=''">
            `name` = #{set.name},
        </if>
        <if test="set.level != null">
            `level` = #{set.level},
        </if>
        <if test="set.create != null">
            `create` = #{set.create},
        </if>
        <if test="set.passwd != null and set.passwd!=''">
            `passwd` = #{set.passwd},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.nameList != null">
                    `name` in
                    <foreach collection="where.nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyName!=null and where.fuzzyName.size()>0">
                (
                <foreach collection="where.fuzzyName"  separator="or" item="item">
                    `Name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyName!=null and where.rightFuzzyName.size()>0">
                (
                <foreach collection="where.rightFuzzyName"  separator="or" item="item">
                    `Name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.levelList != null">
                    `level` in
                    <foreach collection="where.levelList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.levelSt !=null">
                `level` >= #{where.levelSt} and
            </if>
            <if test="where.levelEd!=null">
                `level` &lt;= #{where.levelEd} and
            </if>
                <if test="where.createList != null">
                    `create` in
                    <foreach collection="where.createList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createSt !=null">
                `create` >= #{where.createSt} and
            </if>
            <if test="where.createEd!=null">
                `create` &lt;= #{where.createEd} and
            </if>
                <if test="where.passwdList != null">
                    `passwd` in
                    <foreach collection="where.passwdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyPasswd!=null and where.fuzzyPasswd.size()>0">
                (
                <foreach collection="where.fuzzyPasswd"  separator="or" item="item">
                    `Passwd` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyPasswd!=null and where.rightFuzzyPasswd.size()>0">
                (
                <foreach collection="where.rightFuzzyPasswd"  separator="or" item="item">
                    `Passwd` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
        </trim>
    </update>


    <resultMap type="com.shape.singleproject.dto.AdminUser" id="AdminUserMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="level" column="level"/>
        <result property="create" column="create"/>
        <result property="passwd" column="passwd"/>
    </resultMap>


    <select id="queryAdminUser" resultMap="AdminUserMap">
        select
        <include refid="baseResult"></include>
        from  `admin_user`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="level != null">
                `level` = #{level} and
            </if>
            <if test="create != null">
                `create` = #{create} and
            </if>
            <if test="passwd != null and passwd!=''">
                `passwd` = #{passwd} and
            </if>
            <if test = "(_parameter instanceof com.shape.singleproject.dto.AdminUser$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="nameList != null">
                    `name` in
                    <foreach collection="nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="levelList != null">
                    `level` in
                    <foreach collection="levelList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="levelSt !=null">
                    `level` >= #{levelSt} and
                </if>
                <if test="levelEd!=null">
                    `level` &lt;= #{levelEd} and
                </if>
                <if test="createList != null">
                    `create` in
                    <foreach collection="createList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createSt !=null">
                    `create` >= #{createSt} and
                </if>
                <if test="createEd!=null">
                    `create` &lt;= #{createEd} and
                </if>
                <if test="passwdList != null">
                    `passwd` in
                    <foreach collection="passwdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyPasswd!=null and fuzzyPasswd.size()>0">
                    (
                    <foreach collection="fuzzyPasswd"  separator="or" item="item">
                        `Passwd` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyPasswd!=null and rightFuzzyPasswd.size()>0">
                    (
                    <foreach collection="rightFuzzyPasswd"  separator="or" item="item">
                        `Passwd` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryAdminUserLimit1" resultMap="AdminUserMap">
        select
        <include refid="baseResult"></include>
        from  `admin_user`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="level != null">
                `level` = #{level} and
            </if>
            <if test="create != null">
                `create` = #{create} and
            </if>
            <if test="passwd != null and passwd!=''">
                `passwd` = #{passwd} and
            </if>
            <if test = "(_parameter instanceof com.shape.singleproject.dto.AdminUser$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="nameList != null">
                        `name` in
                        <foreach collection="nameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="levelList != null">
                        `level` in
                        <foreach collection="levelList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="levelSt !=null">
                    `level` >= #{levelSt} and
                </if>
                <if test="levelEd!=null">
                    `level` &lt;= #{levelEd} and
                </if>
                    <if test="createList != null">
                        `create` in
                        <foreach collection="createList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createSt !=null">
                    `create` >= #{createSt} and
                </if>
                <if test="createEd!=null">
                    `create` &lt;= #{createEd} and
                </if>
                    <if test="passwdList != null">
                        `passwd` in
                        <foreach collection="passwdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyPasswd!=null and fuzzyPasswd.size()>0">
                    (
                    <foreach collection="fuzzyPasswd"  separator="or" item="item">
                        `Passwd` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyPasswd!=null and rightFuzzyPasswd.size()>0">
                    (
                    <foreach collection="rightFuzzyPasswd"  separator="or" item="item">
                        `Passwd` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `name`,
        `level`,
        `create`,
        `passwd`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.shape.singleproject.dto.AdminUser$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.name==true">
                        `name`,
                    </if>
                    <if test="fetchFields.fetchFields.level==true">
                        `level`,
                    </if>
                    <if test="fetchFields.fetchFields.create==true">
                        `create`,
                    </if>
                    <if test="fetchFields.fetchFields.passwd==true">
                        `passwd`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.name==null">
                        `name`,
                    </if>
                    <if test="fetchFields.excludeFields.level==null">
                        `level`,
                    </if>
                    <if test="fetchFields.excludeFields.create==null">
                        `create`,
                    </if>
                    <if test="fetchFields.excludeFields.passwd==null">
                        `passwd`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.shape.singleproject.dto.AdminUser$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>